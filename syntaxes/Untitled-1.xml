<?xml version="1.0" encoding="UTF-8"?
<!-- Lammps Syntax Highlighting definitions for KDE-Kate editor
     First version October 2011 by Alessandro L. Sellerio
     Version 1.0 dated 09/01/2012 by Alessandro L. Sellerio
     Contact the original author at alessandro.sellerio@ieni.cnr.it
     Inspired by original KDE file: bash.xml 
     Put this file in ~.kde/share/apps/katepart/syntax
    --
    
<!DOCTYPE language SYSTEM "language.dtd"
[
      <!ENTITY varname  "[A-Za-z_][A-Za-z0-9_]*"
]

<language version="1.0" kateversion="3.9.4"
          author="Alessandro L. Sellerio" license="GPL v.3 or greater"
          name="Lammps" section="Scientific" extensions="*.lgg;*.lmp;*.lammps;*.liggghts" casesensitive="FALSE"
          priority="9"
	  
<highlighting
  {
				"name": "kw_commands",
				"match": "\\b(angle_coeff|angle_style|atom_modify|atom_style|balance|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dihedral_coeff|dihedral_style|dimension|displace_atoms|dump|dump_image|dump_modify|echo|fix|fix_modify|group|if|improper_coeff|improper_style|include|jump|kspace_modify|kspace_style|label|lattice|log|mass|minimize|min_modify|min_style|neb|neigh_modify|neighbor|newton|next|package|pair_coeff|pair_modify|pair_style|pair_write|partition|prd|print|processors|quit|read_data|read_dump|read_restart|region|replicate|rerun|reset_timestep|restart|run|run_style|set|shell|special_bonds|suffix|tad|temper|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_restart)\\b"
			},
  {
				"name": "kw_fixes",
				"match": "\\b(adapt|addforce|append/atoms|aveforce|ave/atom|ave/correlate|ave/histo|ave/spatial|ave/time|balance|bond/break|bond/create|bond/swap|box/relax|deform|deposit|drag|dt/reset|efield|enforce2d|evaporate|external|freeze|gcmc|gravity|heat|indent|langevin|lineforce|momentum|move|msst|neb|nph|nphug|nph/asphere|nph/sphere|npt|npt/asphere|npt/sphere|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/tri|nvt|nvt/asphere|nvt/sllod|nvt/sphere|orient/fcc|planeforce|poems|pour|press/berendsen|print|qeq/comb|reax/bonds|recenter|restrain|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|setforce|shake|spring|spring/rg|spring/self|srd|store/force|store/state|temp/berendsen|temp/rescale|thermal/conductivity|tmd|ttm|viscosity|viscous|wall/colloid|wall/gran|wall/harmonic|wall/lj126|wall/lj93|wall/piston|wall/reflect|wall/region|wall/srd)\\b"
			},
  {
				"name": "kw_optional_fixes",
				"match": "\\b(addtorque|atc|colvars|imd|langevin/eff|meso|meso/stationary|nph/eff|npt/eff|nve/eff|nvt/eff|nvt/sllod/eff|qeq/reax|reax/c/bonds|smd|temp/rescale/eff)\\b"
			},    
  {
				"name": "kw_accelerated_fixes",
				"match": "\\b(freeze/cuda|addforce/cuda|aveforce/cuda|enforce2d/cuda|gravity/cuda|gravity/omp|npt/cuda|nve/cuda|nve/sphere/omp|nvt/cuda|qeq/comb/omp|setforce/cuda|shake/cuda|temp/berendsen/cuda|temp/rescale/cuda|temp/rescale/limit/cuda|viscous/cuda)\\b"
			},    
  {
				"name": "kw_computes",
				"match": "\\b(angle/local|atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|coord/atom|damage/atom|dihedral/local|displace/atom|erotate/asphere|erotate/sphere|erotate/sphere/atom|event/displace|group/group|gyration|gyration/molecule|heat/flux|improper/local|ke|ke/atom|msd|msd/molecule|pair|pair/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|slice|stress/atom|temp|temp/asphere|temp/com|temp/deform|temp/partial|temp/profile|temp/ramp|temp/region|temp/sphere)\\b"
			},
  {
				"name": "kw_optional_computes",
				"match": "\\b(ackland/atom|ke/eff|ke/atom/eff|meso_e/atom|meso_rho/atom|meso_t/atom|temp/eff|temp/deform/eff|temp/region/eff|temp/rotate)\\b"
			},
  {
				"name": "kw_accelerated_computes",
				"match": "\\b(pe/cuda|pressure/cuda|temp/cuda|temp/partial/cuda)\\b"
			},
  {
				"name": "kw_ps_potentials",
				"match": "\\b(none|hybrid|hybrid/overlay|adp|airebo|beck|bop|born|born/coul/long|born/coul/wolf|brownian|brownian/poly|buck|buck/coul/cut|buck/coul/long|buck/long/coul/long|colloid|comb|coul/cut|coul/debye|coul/dsf|coul/long|coul/wolf|dipole/cut|dpd|dpd/tstat|dsmc|eam|eam/alloy|eam/fs|eim|gauss|gayberne|gran/hertz/history|gran/hooke|gran/hooke/history|hbond/dreiding/lj|hbond/dreiding/morse|kim|lcbop|line/lj|lj/charmm/coul/charmm|lj/charmm/coul/charmm/implicit|lj/charmm/coul/long|lj/class2|lj/class2/coul/cut|lj/class2/coul/long|lj/cut|lj/cut/coul/cut|lj/cut/coul/debye|lj/cut/coul/dsf|lj/cut/coul/long|lj/long/coul/long|lj/cut/tip4p/long|lj/long/tip4p/long|lj/expand|lj/gromacs|lj/gromacs/coul/gromacs|lj/smooth|lj/smooth/linear|lj96/cut|lubricate|lubricate/poly|lubricateU|lubricateU/poly|meam|morse|peri/lps|peri/pmb|reax|rebo|resquared|soft|sw|table|tersoff|tersoff/zbl|tri/lj|yukawa|yukawa/colloid)\\b"
			},
  {
				"name": "kw_optional_ps_potentials",
				"match": "\\b(awpmd/cut|coul/diel|dipole/sf|eam/cd|edip|eff/cut|gauss/cut|lj/sdk|lj/sdk/coul/long|lj/sf|meam/spline|meam/sw/spline|reax/c|sph/heatconduction|sph/idealgas|sph/lj|sph/rhosum|sph/taitwater|sph/taitwater/morris|tersoff/table)\\b"
			},
  {
				"name": "kw_accelerated_ps_potentials",
				"match": "\\b(adp/omp|airebo/omp|beck/omp|born/coul/long/cuda|born/coul/long/gpu|born/coul/long/omp|born/coul/wolf/gpu|born/coul/wolf/omp|born/gpu|born/omp|brownian/omp|brownian/poly/omp|buck/coul/cut/cuda|buck/coul/cut/gpu|buck/coul/cut/omp|buck/coul/long/cuda|buck/coul/long/gpu|buck/coul/long/omp|buck/cuda|buck/long/coul/long/omp|buck/gpu|buck/omp|colloid/gpu|colloid/omp|comb/omp|coul/cut/omp|coul/debye/omp|coul/dsf/gpu|coul/long/gpu|coul/long/omp|coul/wolf|dipole/cut/gpu|dipole/cut/omp|dipole/sf/gpu|dipole/sf/omp|dpd/omp|dpd/tstat/omp|eam/alloy/cuda|eam/alloy/gpu|eam/alloy/omp|eam/alloy/opt|eam/cd/omp|eam/cuda|eam/fs/cuda|eam/fs/gpu|eam/fs/omp|eam/fs/opt|eam/gpu|eam/omp|eam/opt|edip/omp|eim/omp|gauss/gpu|gauss/omp|gayberne/gpu|gayberne/omp|gran/hertz/history/omp|gran/hooke/cuda|gran/hooke/history/omp|gran/hooke/omp|hbond/dreiding/lj/omp|hbond/dreiding/morse/omp|line/lj/omp|lj/charmm/coul/charmm/cuda|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit/cuda|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long/cuda|lj/charmm/coul/long/gpu|lj/charmm/coul/long/omp|lj/charmm/coul/long/opt|lj/charmm/coul/pppm/omp|lj/class2/coul/cut/cuda|lj/class2/coul/cut/omp|lj/class2/coul/long/cuda|lj/class2/coul/long/gpu|lj/class2/coul/pppm/omp|lj/class2/coul/long/omp|lj/class2/cuda|lj/class2/gpu|lj/class2/omp|lj/long/coul/long/omp|lj/cut/coul/cut/cuda|lj/cut/coul/cut/gpu|lj/cut/coul/cut/omp|lj/cut/coul/debye/cuda|lj/cut/coul/debye/gpu|lj/cut/coul/debye/omp|lj/cut/coul/dsf/gpu|lj/cut/coul/long/cuda|lj/cut/coul/long/gpu|lj/cut/coul/long/omp|lj/cut/coul/long/opt|lj/cut/coul/pppm/omp|lj/cut/cuda|lj/cut/experimental/cuda|lj/cut/gpu|lj/cut/omp|lj/cut/opt|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|lj/expand/cuda|lj/expand/gpu|lj/expand/omp|lj/gromacs/coul/gromacs/cuda|lj/gromacs/coul/gromacs/omp|lj/gromacs/cuda|lj/gromacs/omp|lj/sdk/gpu|lj/sdk/omp|lj/sdk/coul/long/gpu|lj/sdk/coul/long/omp|lj/sf/omp|lj/smooth/cuda|lj/smooth/omp|lj/smooth/linear/omp|lj96/cut/cuda|lj96/cut/gpu|lj96/cut/omp|lubricate/omp|lubricate/poly/omp|meam/spline/omp|morse/cuda|morse/gpu|morse/omp|morse/opt|peri/lps/omp|peri/pmb/omp|rebo/omp|resquared/gpu|resquared/omp|soft/omp|sw/cuda|sw/omp|table/gpu|table/omp|tersoff/cuda|tersoff/omp|tersoff/table/omp|tersoff/zbl/omp|tri/lj/omp|yukawa/gpu|yukawa/omp|yukawa/colloid/gpu|yukawa/colloid/omp)\\b"
			},
  {
				"name": "kw_bs_potentials",
				"match": "\\b(none|hybrid|class2|fene|fene/expand|harmonic|morse|nonlinear|quartic|table)\\b"
			},
  {
				"name": "kw_optional_bs_potentials",
				"match": "\\b(harmonic/shift|harmonic/shift/cut)\\b"
			},
  {
				"name": "kw_accelerated_bs_potentials",
				"match": "\\b(class2/omp|fene/omp|fene/expand/omp|harmonic/omp|harmonic/shift/omp|harmonic/shift/cut/omp|morse/omp|nonlinear/omp|quartic/omp|table/omp)\\b"
			},
  {
				"name": "kw_as_potentials",
				"match": "\\b(none|hybrid|charmm|class2|cosine|cosine/delta|cosine/periodic|cosine/squared|harmonic|table)\\b"
			},
  {
				"name": "kw_optional_as_potentials",
				"match": "\\b(sdk|cosine/shift|cosine/shift/exp|dipole|fourier|fourier/simple|quartic)\\b"
			},
  {
				"name": "kw_accelerated_as_potentials",
				"match": "\\b(charmm/omp|class2/omp|cosine/omp|cosine/delta/omp|cosine/periodic/omp|cosine/shift/omp|cosine/shift/exp/omp|cosine/squared/omp|dipole/ompharmonic/omp|table/omp)\\b"
			},
  {
				"name": "kw_ds_potentials",
				"match": "\\b(none|hybrid|charmm|class2|harmonic|helix|multi/harmonic|opls)\\b"
			},
  {
				"name": "kw_optional_ds_potentials",
				"match": "\\b(cosine/shift/exp|fourier|nharmonic|quadratic|table)\\b"
			},
  {
				"name": "kw_accelerated_ds_potentials",
				"match": "\\b(charmm/omp|class2/omp|cosine/shift/exp/omp|harmonic/omp|helix/omp|multi/harmonic/omp|opls/omptable/omp)\\b"
			},
  {
				"name": "kw_all_is_potentials",
				"match": "\\b(none|hybrid|class2|cvff|harmonic|umbrella|cossq|ring|class2/omp|cossq/omp|cvff/omp|fourier|harmonic/omp|ring/omp|umbrella/omp)\\b"
			},
  {
				"name": "kw_all_kspace_solvers",
				"match": "\\b(ewald|ewald/disp|msm|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/tip4p|ewald/omp|pppm/cuda|pppm/gpu|pppm/omp|pppm/cg/omp|pppm/tip4p/omp)\\b"
			},  
  {
				"name": "kw_operators",
				"match": "\\b(equal|add|sub|mult|div)\\b"
			},
  {
				"name": "kw_special",
				"match": "\\b(NULL|EDGE|&amp;)\\b"
			},
  {
				"name": "kw_conditionals",
				"match": "\\b(if|then|elif|else)\\b"
			}
  
  <!-- SHORT LIST OF DEFINED KEYWORD GROUPS
	kw_commands
	kw_fixes
	kw_optional_fixes
	kw_accelerated_fixes
	kw_computes
	kw_optional_computes
	kw_accelerated_computes
	kw_ps_potentials
	kw_optional_ps_potentials
	kw_accelerated_ps_potentials
	kw_bs_potentials
	kw_optional_bs_potentials
	kw_accelerated_bs_potentials
	kw_as_potentials
	kw_optional_as_potentials
	kw_accelerated_as_potentials
	kw_ds_potentials
	kw_optional_ds_potentials
	kw_accelerated_ds_potentials
	kw_all_is_potentials
	kw_all_kspace_solvers
	kw_operators
	kw_special
	kw_conditionals
  --
  
      <contexts

<!-- "Start" is the starting context --
      <context attribute="Normal Text" lineEndContext="#stay" name="Start"
        <IncludeRules context="FindAll" /
      </context

<!-- Following rulessets are then included --

<!-- FindAll tries to interpret all the strings including other rules --
      <context attribute="Normal Text" lineEndContext="#stay" name="FindAll"
        <IncludeRules context="FindComments" /
        <IncludeRules context="FindCommands" /
        <IncludeRules context="FindStrings" /
        <IncludeRules context="FindSubstitutions" /
      </context

     <!-- FindComments consumes comments till EOL --
      <context attribute="Normal Text" lineEndContext="#pop" name="FindComments"
        <DetectChar attribute="Comment" context="Comment" char="#" firstNonSpace="true"/
        <RegExpr attribute="Normal Text" context="Comment" String="[\s](?=#)" /
      </context
      <context attribute="Comment" lineEndContext="#pop" name="Comment"
      </context

      <!-- FindCommands matches expected items. --
      <context attribute="Normal Text" lineEndContext="#stay" name="FindCommands"

      <!-- We handle float and integer numbers --
	<Float attribute="Floating" context="#stay"/
	<Int attribute="Integer" context="#stay"/	
	
	
	<!-- We handle variable assignments using tricks on how
	     variables are actually defined or recalled in lammps --
	<RegExpr attribute="Variable" context="#stay" String="\b&varname;(?=\s+equal)" /
	
	<RegExpr attribute="Variable" context="#stay" String="\bv_\S+" /
	
	<!-- Reading keywords --
	<keyword attribute="Commands" context="#stay" String="kw_commands" /
	
	<keyword attribute="Fixes" context="#stay" String="kw_fixes" /
	<keyword attribute="Fixes" context="#stay" String="kw_accelerated_fixes" /
	<keyword attribute="Fixes" context="#stay" String="kw_optional_fixes" /
	
	<keyword attribute="Computes" context="#stay" String="kw_computes" /
	<keyword attribute="Computes" context="#stay" String="kw_optional_computes" /
	<keyword attribute="Computes" context="#stay" String="kw_accelerated_computes" /
	
	<keyword attribute="Potentials" context="#stay" String="kw_ps_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_optional_ps_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_accelerated_ps_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_bs_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_optional_bs_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_accelerated_bs_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_as_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_optional_as_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_accelerated_as_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_ds_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_optional_ds_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_accelerated_ds_potentials" /
	<keyword attribute="Potentials" context="#stay" String="kw_all_is_potentials" /
	
	<keyword attribute="KSpaceSolvers" context="#stay" String="kw_all_kspace_solvers" /
	
	<keyword attribute="Special" context="#stay" String="kw_special" /
	
	<keyword attribute="Conditionals" context="#stay" String="kw_conditionals" /
	
	<keyword attribute="Operators" context="#stay" String="kw_operators" /
	
	<!-- Getting the ampersand "&" right --
	<DetectChar char="&amp;" attribute="Special" context="#stay" / 
	
	
      </context
      
      
       <!-- FindStrings looks for single and double quoted strings also with $-prefix --
      <context attribute="Normal Text" lineEndContext="#stay" name="FindStrings"
        <DetectChar attribute="String" context="StringSQ" char="'" /
        <DetectChar attribute="String" context="StringDQ" char="&quot;" /
        <Detect2Chars attribute="String" context="StringEsc" char="$" char1="'" /
        <Detect2Chars attribute="String" context="StringDQ" char="$" char1="&quot;" /
      </context
      
           <!-- FindSubstitutions looks for anything starting with $ and ` and their escapes --
      <context attribute="Normal Text" lineEndContext="#stay" name="FindSubstitutions"
	<RegExpr attribute="Variable" context="#stay" String="\$&varname;" /
	<RegExpr attribute="Variable" context="#stay" String="\$\{&varname;\}" /
        <RegExpr attribute="Variable" context="#stay" String="\$\{#&varname;(\[[*@]\])?\}" /
        <RegExpr attribute="Variable" context="#stay" String="\$\{!&varname;(\[[*@]\]|[*@])?\}" /
        <RegExpr attribute="Variable" context="VarBraceErr" String="\$\{&varname;" /
        <RegExpr attribute="Variable" context="VarBraceErr" String="\$\{[*@#?$!_0-9-](?=[:#%/=?+-])" /
      </context

      
<!-- FOLLOWING: contexts that can be branched to. --
      
           <!-- StringSQ consumes anything till ' --
      <context attribute="String" lineEndContext="#stay" name="StringSQ"
        <DetectChar attribute="String" context="#pop" char="'" /
      </context

      <!-- StringDQ consumes anything till " substitutes vars and expressions --
      <context attribute="String" lineEndContext="#stay" name="StringDQ"
        <DetectChar attribute="String" context="#pop" char="&quot;" /
        <RegExpr attribute="String" context="#stay" String="\\[`&quot;\\$\n]" /
        <IncludeRules context="FindSubstitutions" /
      </context

      <!-- StringEsc eats till ' but escaping many characters --
      <context attribute="String" lineEndContext="#stay" name="StringEsc"
        <DetectChar attribute="String" context="#pop" char="'" /
        <RegExpr attribute="String" context="#stay" String="\\[abefnrtv\\']" /
        <RegExpr attribute="String" context="#stay" String="\\([0-7]{13}|x[A-Fa-f0-9]{12}|c.)" /
      </context

      <!-- VarBraceErr is called as soon as ${xxx is encoutered --
      <context attribute="Error" lineEndContext="#stay" name="VarBraceErr"
        <DetectChar attribute="Variable" context="#pop" char="}" /
      </context

    </contexts


    Datas
      Data name="Normal" defStyleNum="dsNormal"/
      Data name="Commands" defStyleNum="dsKeyword"/
      Data name="Fixes" defStyleNum="dsFunction"/
      Data name="Computes" defStyleNum="dsKeyword"/
      Data name="Potentials" defStyleNum="dsChar"/
      Data name="KSpaceSolvers" defStyleNum="dsKeyword"/
      Data name="Special" defStyleNum="dsAlert"/
      Data name="Conditionals" defStyleNum="dsChar"/
      Data name="Variable" defStyleNum="dsDataType"/
      Data name="Operators" defStyleNum="dsOthers"/
      Data name="String" defStyleNum="dsString"/
      Data name="Floating" defStyleNum="dsFloat" spellChecking="false"/
      Data name="Integer" defStyleNum="dsDecVal" spellChecking="false"/
      Data name="Comment" defStyleNum="dsComment"/
      Data name="Error" defStyleNum="dsError" /
    </itemDatas
    
</highlighting

<general
    <comments
        <comment name="singleLine" start="#" /
    </comments
    <keywords casesensitive="0" weakDeliminator="[]$._{}-/" /
</general

</language